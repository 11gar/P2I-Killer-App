// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace P2I_backend.Migrations
{
    [DbContext(typeof(ApiContext))]
    [Migration("20240122090207_done1")]
    partial class done1
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "8.0.1");

            modelBuilder.Entity("Game", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<bool>("IsStarted")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Password")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Games");
                });

            modelBuilder.Entity("Kill", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("IdGame")
                        .HasColumnType("INTEGER");

                    b.Property<int>("IdKilled")
                        .HasColumnType("INTEGER");

                    b.Property<int>("IdKiller")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("Kills");
                });

            modelBuilder.Entity("User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int?>("GameId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("GameId");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("UserInGame", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<bool>("Alive")
                        .HasColumnType("INTEGER");

                    b.Property<int>("CibleId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("GameId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("IdCible")
                        .HasColumnType("INTEGER");

                    b.Property<int>("IdGame")
                        .HasColumnType("INTEGER");

                    b.Property<int>("IdUser")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Kills")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("Moderator")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("CibleId");

                    b.HasIndex("GameId");

                    b.ToTable("UsersInGames");
                });

            modelBuilder.Entity("User", b =>
                {
                    b.HasOne("Game", null)
                        .WithMany("Moderators")
                        .HasForeignKey("GameId");
                });

            modelBuilder.Entity("UserInGame", b =>
                {
                    b.HasOne("UserInGame", "Cible")
                        .WithMany("KillsList")
                        .HasForeignKey("CibleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Game", "Game")
                        .WithMany("Players")
                        .HasForeignKey("GameId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cible");

                    b.Navigation("Game");
                });

            modelBuilder.Entity("Game", b =>
                {
                    b.Navigation("Moderators");

                    b.Navigation("Players");
                });

            modelBuilder.Entity("UserInGame", b =>
                {
                    b.Navigation("KillsList");
                });
#pragma warning restore 612, 618
        }
    }
}
